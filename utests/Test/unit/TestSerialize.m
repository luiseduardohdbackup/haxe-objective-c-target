//
//  TestSerialize
//  Test
//
//  Source generated by Haxe Objective-C target
//

#import "../unit/TestSerialize.h"

@implementation TestSerialize

- (id) id:(id)v{
	return [Unserializer run:[Serializer run:v]];
}
- (void) test{
	
	NSMutableArray *values = [[NSMutableArray alloc] initWithObjects:[NSNull null], YES, NO, [NSNumber numberWithInt:0], [NSNumber numberWithInt:1], [NSNumber numberWithInt:1506], [NSNumber numberWithInt:-11259375], [NSNumber numberWithFloat:12.3], [NSNumber numberWithFloat:-1e10], (NSMutableString*)@"hello", (NSMutableString*)@"éé", (NSMutableString*)@"\r\n", (NSMutableString*)@"\n", (NSMutableString*)@"   ", (NSMutableString*)@"", nil];
	{
		int _g = 0;
		while (_g < values.length) {
			id v = [values objectAtIndex:_g];
			++_g;
			[self eq:[self._id:v] v2:v pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"13",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
		}
	}
	[self t:isnan(self._id(NAN))] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"15",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self t:[self._id:MathDBL_MAX] > 0 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"16",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self f:[self._id:Math-DBL_MAX] > 0 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"17",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self f:isfinite(self._id(DBL_MAX))] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"18",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self f:isfinite(self._id(-DBL_MAX))] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"19",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self doTestCollection:[[NSMutableArray alloc] initWithObjects:, nil]];
	[self doTestCollection:[[NSMutableArray alloc] initWithObjects:[NSNumber numberWithInt:1], [NSNumber numberWithInt:2], [NSNumber numberWithInt:4], [NSNumber numberWithInt:5], nil]];
	[self doTestCollection:[[NSMutableArray alloc] initWithObjects:[NSNumber numberWithInt:1], [NSNumber numberWithInt:2], [NSNull null], [NSNull null], [NSNull null], [NSNull null], [NSNull null], [NSNumber numberWithInt:4], [NSNumber numberWithInt:5], nil]];
	
	NSDate *d = [NSDatenow];
	
	NSDate *d2 = [self _id:d];
	[self t:[Std is:d2 t:NSDate] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"29",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[d2 toString] v2:[d toString] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"30",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	id o = struct {
	x:(NSMutableString*)@"a"; y:-1.56; z:(NSMutableString*)@"hello"
	} structName;
	id o2 = [self _id:o];
	[self eq:o x v2:o2 x pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"35",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:o y v2:o2 y pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"36",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:o z v2:o2 z pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"37",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	
	MyClass *c = [[MyClass alloc] init:999];
	c.intValue = 33;
	c.stringValue = (NSMutableString*)@"Hello";
	
	MyClass *c2 = [self _id:c];
	[self t:[Std is:c2 t:MyClass] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"44",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self f:c == c2 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"45",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:c2 intValue v2:c intValue pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"46",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:c2 stringValue v2:c stringValue pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"47",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[c2 get] v2:999 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"48",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	Serializer.USE_ENUM_INDEX = NO;
	[self doTestEnums];
	Serializer.USE_ENUM_INDEX = YES;
	[self doTestEnums];
	
	StringMap *h = [[StringMap alloc] init];
	[h set:(NSMutableString*)@"keya" value:2];
	[h set:(NSMutableString*)@"kéyb" value:-465];
	
	StringMap *h2 = [self _id:h];
	[self t:[Std is:h2 t:StringMap] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"61",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[h2 get:(NSMutableString*)@"keya"] v2:2 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"62",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[h2 get:(NSMutableString*)@"kéyb"] v2:-465 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"63",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[Lambda count:h2 pred:nil] v2:2 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"64",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	
	IntMap *h1 = [[IntMap alloc] init];
	[h1 set:55 value:2];
	[h1 set:-101 value:-465];
	
	IntMap *h21 = [self _id:h1];
	[self t:[Std is:h21 t:IntMap] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"71",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[h21 get:55] v2:2 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"72",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[h21 get:-101] v2:-465 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"73",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[Lambda count:h21 pred:nil] v2:2 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"74",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	
	ObjectMap *h3 = [[ObjectMap alloc] init:nil];
	
	ClassWithoutHashCode *a = [[ClassWithoutHashCode alloc] init:9];
	
	ClassWithoutHashCode *b = [[ClassWithoutHashCode alloc] init:8];
	[h3 set:a value:b];
	[h3 set:b value:a];
	
	ObjectMap *h22 = [self _id:h3];
	[self t:[Std is:h22 t:ObjectMap] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"83",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self f:[h22 exists:a] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"85",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self f:[h22 exists:b] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"86",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self t:[h3 exists:a] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"88",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self t:[h3 exists:b] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"89",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[h3 get:a] v2:b pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"90",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[h3 get:b] v2:a pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"91",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	BOOL nothing = YES;
	{
		id _it = [h22 keys];
		while ( [_it hasNext] ) do {
			ClassWithoutHashCode k = [_it next];
			{
				nothing = NO;
				[self t:k i == 8 || k i == 9 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"95",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
				[self t:[h22 exists:k] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"96",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
				
				ClassWithoutHashCode *v = [h22 get:k];
				[self t:v i == 8 || v i == 9 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"98",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
			};
		}
	}
	[self f:nothing pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"100",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self doTestBytes:[Bytes alloc:0]];
	[self doTestBytes:[Bytes ofString:(NSMutableString*)@"A"]];
	[self doTestBytes:[Bytes ofString:(NSMutableString*)@"AB"]];
	[self doTestBytes:[Bytes ofString:(NSMutableString*)@"ABC"]];
	[self doTestBytes:[Bytes ofString:(NSMutableString*)@"ABCD"]];
	[self doTestBytes:[Bytes ofString:(NSMutableString*)@"héllé"]];
	
	Bytes *b1 = [Bytes alloc:100];
	{
		int _g1 = 0; int _g = b1.length;
		while (_g1 < _g) {
			int i = _g1++;
			[b1.b objectAtIndex:i] = (i % 10 & 255);
		}
	}
	[self doTestBytes:b1];
	c.ref = c;
	Serializer.USE_CACHE = YES;
	
	MyClass *c21 = [self _id:c];
	Serializer.USE_CACHE = NO;
	[self eq:c21 ref v2:c21 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"119",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self exc:^- (void) {
		[Unserializer run:nil];
	} pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"123",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self exc:^- (void) {
		[Unserializer run:(NSMutableString*)@""];
	} pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"126",@"unit.TestSerialize",@"test",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
}
- (void) doTestEnums{
	[self eq:[self._id: A] v2: A pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"131",@"unit.TestSerialize",@"doTestEnums",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[self._id: B] v2: B pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"132",@"unit.TestSerialize",@"doTestEnums",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	
	MyEnum *c = FEnum[ C:0 b:(NSMutableString*)@"hello"];
	[self t:[Type enumEq:[self._id:c] b:c] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"134",@"unit.TestSerialize",@"doTestEnums",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self t:[Type enumEq:[self._id:FEnum[ D:FEnum[ D:c]]] b:FEnum[ D:FEnum[ D:c]]] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"135",@"unit.TestSerialize",@"doTestEnums",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self t:[Std is:[self._id:c] t:] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"136",@"unit.TestSerialize",@"doTestEnums",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self t:((BOOL)($this:(snd ctx.path)) 
	MyEnum *_g = [self._id:c]
	__r__ = ((id)($this:(snd ctx.path)) 
	var $e3 : enum =  (_g)
	switch ( $e3.index ) {
		
		case 2:
		{
			__r__2 = YES}break
		default:{
			__r__2 = NO}break
	}
	return __r__2{
		
		id* __r__2}
	}($this))
	return __r__{
		
		BOOL* __r__}
	}(self)) pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"137",@"unit.TestSerialize",@"doTestEnums",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
}
- (void) doTestCollection:(NSMutableArray*)a{
	
	NSMutableArray *a2 = (NSMutableArray*)[self _id:a];
	[self eq:a2 length v2:a length pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"145",@"unit.TestSerialize",@"doTestCollection",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	{
		int _g1 = 0; int _g = a.length;
		while (_g1 < _g) {
			int i = _g1++;
			[self eq:[a2 objectAtIndex:i] v2:[a objectAtIndex:i] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"147",@"unit.TestSerialize",@"doTestCollection",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
		}
	}
	
	List *l = [Lambda list:a];
	
	List *l2 = [self _id:l];
	[self t:[Std is:l2 t:List] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"150",@"unit.TestSerialize",@"doTestCollection",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:l2 length v2:l length pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"151",@"unit.TestSerialize",@"doTestCollection",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	id it = [l iterator];
	{
		id _it = [l2 iterator];
		while ( [_it hasNext] ) do {
			id x = [_it next];
			[self eq:x v2:[it next] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"154",@"unit.TestSerialize",@"doTestCollection",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
		}
	}
	[self f:[it hasNext] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"155",@"unit.TestSerialize",@"doTestCollection",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
}
- (void) doTestBytes:(Bytes*)b{
	
	Bytes *b2 = [self _id:b];
	[self t:[Std is:b2 t:Bytes] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"160",@"unit.TestSerialize",@"doTestBytes",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:b2 length v2:b length pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"161",@"unit.TestSerialize",@"doTestBytes",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	{
		int _g1 = 0; int _g = b.length;
		while (_g1 < _g) {
			int i = _g1++;
			[self eq:[b2 b objectAtIndex:i] v2:[b b objectAtIndex:i] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestSerialize.hx",@"163",@"unit.TestSerialize",@"doTestBytes",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
		}
	}
	[self infos:nil];
}
- (id) init{
	self = [super init];
	[super];
	return self;
}

@end
