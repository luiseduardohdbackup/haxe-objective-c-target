//
//  TestOrder
//  Test
//
//  Source generated by Haxe Objective-C target
//

#import "../unit/TestOrder.h"

@implementation TestOrder

- (void) testUsing{
	[self eq:[Using3 usingTest:(NSMutableString*)@"foo"] v2:(NSMutableString*)@"3" pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestOrder.hx",@"17",@"unit.TestOrder",@"testUsing",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	
	TestOrder *c =  C1;
	{
		Test.count++;
		[self eq:(NSMutableString*)@"TEnum(unit.E2,[])" v2:(NSMutableString*)@"TEnum(unit.E2,[])" pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestOrder.hx",@"21",@"unit.TestOrder",@"testUsing",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	}
	[self eq:c v2: C1 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestOrder.hx",@"22",@"unit.TestOrder",@"testUsing",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
}
- (id) init{
	self = [super init];
	[super];
	return self;
}

@end

@implementation ClassWithProp


+ (int) set_STAT_X:(int)v{
	ClassWithProp.STAT_X = v * 2;
	return v;
}

@synthesize _x;
- (int) get_x{
	return self._x;
}
- (int) set_x:(int)v{
	self._x = v;
	return v;
}
- (id) init{
	self = [super init];
	self._x = 5;
	return self;
}

@end

@implementation SubClassWithProp


- (int) get_x{
	return self._x + 1;
}
- (int) get_y{
	return self.y;
}
- (int) set_y:(int)v{
	self.y = v;
	return v;
}
- (id) init{
	self = [super init];
	[super];
	[self set_y:10];
	return self;
}

@end

@implementation TestReflect

+ (NSMutableArray*) TYPES:(NSMutableArray*)val {
	static NSMutableArray *_val;
	if (val == nil) { if (_val == nil) _val = [[NSMutableArray alloc] initWithObjects:[NSNull null], TAbstractDecl, NSMutableString, TAbstractDecl, TAbstractDecl, NSMutableArray, StringMap, List, NSDate, Xml, Math, , MyClass, MySubClass, TAbstractDecl, TAbstractDecl, TAbstractDecl, MyInterface, nil]; }
	else { if (_val != nil) _val = val; }
	return _val;
}
+ (NSMutableString*) u:(NSMutableString*)s{
	return s;
}
+ (NSMutableString*) u2:(NSMutableString*)s s2:(NSMutableString*)s2{
	return [[s stringByAppendingString:(NSMutableString*)@"."] stringByAppendingString:s2];
}
+ (NSMutableArray*) TNAMES:(NSMutableArray*)val {
	static NSMutableArray *_val;
	if (val == nil) { if (_val == nil) _val = [[NSMutableArray alloc] initWithObjects:(NSMutableString*)@"null", (NSMutableString*)@"Int", (NSMutableString*)@"String", (NSMutableString*)@"Bool", (NSMutableString*)@"Float", (NSMutableString*)@"Array", (NSMutableString*)@"haxe.ds.StringMap", (NSMutableString*)@"List", (NSMutableString*)@"Date", (NSMutableString*)@"Xml", (NSMutableString*)@"Math", [[(NSMutableString*)@"unit" stringByAppendingString:(NSMutableString*)@"."] stringByAppendingString:(NSMutableString*)@"MyEnum"], [[(NSMutableString*)@"unit" stringByAppendingString:(NSMutableString*)@"."] stringByAppendingString:(NSMutableString*)@"MyClass"], [[(NSMutableString*)@"unit" stringByAppendingString:(NSMutableString*)@"."] stringByAppendingString:(NSMutableString*)@"MySubClass"], (NSMutableString*)@"Class", (NSMutableString*)@"Enum", (NSMutableString*)@"Dynamic", [[(NSMutableString*)@"unit" stringByAppendingString:(NSMutableString*)@"."] stringByAppendingString:(NSMutableString*)@"MyInterface"], nil]; }
	else { if (_val != nil) _val = val; }
	return _val;
}
- (void) testTypes{
	{
		int _g1 = 1; int _g = TestReflect.TYPES.length;
		while (_g1 < _g) {
			int i = _g1++;
			id t = [TestReflect.TYPES objectAtIndex:i];
			
			NSMutableString *name = [TestReflect.TNAMES objectAtIndex:i];
			[self infos:[(NSMutableString*)@"type " stringByAppendingString:name]];
			[self f:t == nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"99",@"unit.TestReflect",@"testTypes",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
			if (name == (NSMutableString*)@"Enum") {
			}
			else if (t ==  || t == TAbstractDecl) {
				[self eq:[Type getEnumName:t] v2:name pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"103",@"unit.TestReflect",@"testTypes",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
				[self eq:[Type resolveEnum:name] v2:t pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"104",@"unit.TestReflect",@"testTypes",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
			}
			else {
				[self eq:[Type getClassName:t] v2:name pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"106",@"unit.TestReflect",@"testTypes",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
				[self eq:[Type resolveClass:name] v2:t pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"107",@"unit.TestReflect",@"testTypes",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
			}
		}
	}
	[self infos:nil];
}
- (void) testIs{
	[self is:nil t1:nil t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"114",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:0 t1:TAbstractDecl t2:TAbstractDecl pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"115",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:1 t1:TAbstractDecl t2:TAbstractDecl pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"116",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:-1 t1:TAbstractDecl t2:TAbstractDecl pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"117",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:2.0 t1:TAbstractDecl t2:TAbstractDecl pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"118",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:1.2 t1:TAbstractDecl t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"119",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:1e10 t1:TAbstractDecl t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"120",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:-1e10 t1:TAbstractDecl t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"121",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:MathNAN t1:TAbstractDecl t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"122",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:MathDBL_MAX t1:TAbstractDecl t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"123",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:Math-DBL_MAX t1:TAbstractDecl t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"124",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:YES t1:TAbstractDecl t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"125",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:NO t1:TAbstractDecl t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"126",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:(NSMutableString*)@"Hello" t1:NSMutableString t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"127",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:(NSMutableString*)@"123" t1:NSMutableString t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"128",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:(NSMutableString*)@"false" t1:NSMutableString t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"129",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:(NSMutableString*)@"" t1:NSMutableString t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"130",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:[[NSMutableArray alloc] initWithObjects:, nil] t1:NSMutableArray t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"131",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:[[List alloc] init] t1:List t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"132",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:[[StringMap alloc] init] t1:StringMap t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"133",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:[[MyClass alloc] init:0] t1:MyClass t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"134",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:[[MySubClass alloc] init "-dynamic_param-" ] t1:MyClass t2:MySubClass pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"135",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is: A t1: t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"136",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:FEnum[ C:0 b:(NSMutableString*)@""] t1: t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"137",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:[NSDatenow] t1:NSDate t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"138",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:struct {
	x:0
	} structName t1:nil t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"139",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:^- (void) {
	} t1:nil t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"140",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:MyClass t1:TAbstractDecl t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"141",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is: t1:TAbstractDecl t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"142",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self is:TAbstractDecl t1:TAbstractDecl t2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"143",@"unit.TestReflect",@"testIs",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
}
- (void) is:(id)v t1:(id)t1 t2:(id)t2 pos:(id)pos{
	// Simulated optional arguments
	if (pos == nil) pos = nil;
	if (t2 == nil) t2 = nil;
	
	{
		int _g1 = 0; int _g = TestReflect.TYPES.length;
		while (_g1 < _g) {
			int i = _g1++;
			id c = [TestReflect.TYPES objectAtIndex:i];
			[self infos:[[[Std string:v] stringByAppendingString:(NSMutableString*)@" is "] stringByAppendingString:[TestReflect TNAMES objectAtIndex:i]]];
			[self eq:[Std is:v t:c] v2:c != nil &&  (c == t1 || c == t2) || c == TAbstractDecl pos:pos];
		}
	}
	[self infos:nil];
	[self t:[Std is:v t:TAbstractDecl] pos:pos];
}
- (void) testTypeof{
	[self _typeof:nil rt: TNull pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"157",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:0 rt: TInt pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"158",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:1 rt: TInt pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"159",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:-1 rt: TInt pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"160",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:1.2 rt: TFloat pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"161",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:1e10 rt: TFloat pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"162",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:-1e10 rt: TFloat pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"163",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:MathNAN rt: TFloat pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"164",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:MathDBL_MAX rt: TFloat pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"165",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:Math-DBL_MAX rt: TFloat pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"166",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:YES rt: TBool pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"167",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:NO rt: TBool pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"168",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:(NSMutableString*)@"Hello" rt:FEnum[ TClass:NSMutableString] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"169",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:(NSMutableString*)@"" rt:FEnum[ TClass:NSMutableString] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"170",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:[[NSMutableArray alloc] initWithObjects:, nil] rt:FEnum[ TClass:NSMutableArray] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"171",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:[[List alloc] init] rt:FEnum[ TClass:List] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"172",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:[[StringMap alloc] init] rt:FEnum[ TClass:StringMap] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"173",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:[[MyClass alloc] init:0] rt:FEnum[ TClass:MyClass] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"174",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:[[MySubClass alloc] init "-dynamic_param-" ] rt:FEnum[ TClass:MySubClass] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"175",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof: A rt:FEnum[ TEnum:] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"176",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:FEnum[ C:0 b:(NSMutableString*)@""] rt:FEnum[ TEnum:] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"177",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:[NSDatenow] rt:FEnum[ TClass:NSDate] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"178",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:struct {
	x:0
	} structName rt: TObject pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"179",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:^- (void) {
	} rt: TFunction pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"180",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:MyClass rt: TObject pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"181",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof: rt: TObject pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"182",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:TAbstractDecl rt: TObject pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"185",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self _typeof:TAbstractDecl rt: TObject pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"186",@"unit.TestReflect",@"testTypeof",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
}
- (void) typeof:(id)v rt:(Type*)rt pos:(id)pos{
	// Simulated optional arguments
	if (pos == nil) pos = nil;
	
	
	Type *vt = [Type _typeof:v];
	[self infos:[[[(NSMutableString*)@"typeof(" stringByAppendingString:[Std string:v]] stringByAppendingString:(NSMutableString*)@") = "] stringByAppendingString:[Std string:vt]]];
	[self t:[Type enumEq:vt b:rt] pos:pos];
}
- (void) testConv{
	[self eq:(NSMutableString*)@"A" v2:(NSMutableString*)@"A" pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"197",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self unspec:^- (void) {
		[NSMutableString fromCharCode:1024];
	} pos:nil];
	[self eq:[(NSMutableString*)@"A" characterAtIndex:0] v2:65 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"199",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[(NSMutableString*)@"" characterAtIndex:0] v2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"200",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:65 v2:65 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"201",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:65 v2:65 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"202",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:-65 v2:-65 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"203",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:1 v2:1 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"204",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:-1 v2:-1 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"205",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:1 v2:1 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"206",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:-1 v2:-1 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"207",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[Std parseInt:(NSMutableString*)@"65"] v2:65 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"208",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[Std parseInt:(NSMutableString*)@"65.3"] v2:65 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"209",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[Std parseFloat:(NSMutableString*)@"65"] v2:65.0 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"210",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[Std parseFloat:(NSMutableString*)@"65.3"] v2:65.3 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"211",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[Std parseFloat:(NSMutableString*)@"-1e10"] v2:-1e10 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"212",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[Std parseInt:(NSMutableString*)@"0xFF"] v2:255 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"213",@"unit.TestReflect",@"testConv",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
}
- (void) testCreate{
	
	MyClass *i = [Type createInstance:MyClass args:[[NSMutableArray alloc] initWithObjects:[NSNumber numberWithInt:33], nil]];
	[self t:[Std is:i t:MyClass] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"218",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[i get] v2:33 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"219",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:i intValue v2:55 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"220",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	
	MyClass *i1 = [Type createEmptyInstance:MyClass];
	[self t:[Std is:i1 t:MyClass] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"222",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:[i1 get] v2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"223",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:i1 intValue v2:nil pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"224",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	
	MyEnum *e = [Type createEnum: constr:(NSMutableString*)@"A" params:nil];
	[self eq:e v2: A pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"226",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	
	MyEnum *e1 = [Type createEnum: constr:(NSMutableString*)@"C" params:[[NSMutableArray alloc] initWithObjects:[NSNumber numberWithInt:55], (NSMutableString*)@"hello", nil]];
	
	var $e : enum =  (e1)
	switch ( $e.index ) {
		
		case 2:
		
		var MATCH e_eC_1 : NSMutableString = $e.params[1], MATCH e_eC_0 : int = $e.params[0]{
			{
				[self eq:e_eC_0 v2:55 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"229",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
				[self eq:e_eC_1 v2:(NSMutableString*)@"hello" pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"229",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
			}}break
		default:{
			[self _assert:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"230",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]]}break
	}
	[self exc:^- (void) {
		[Type createEnum: constr:(NSMutableString*)@"A" params:[[NSMutableArray alloc] initWithObjects:[NSNumber numberWithInt:0], nil]];
	} pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"232",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self exc:^- (void) {
		[Type createEnum: constr:(NSMutableString*)@"C" params:nil];
	} pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"233",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self exc:^- (void) {
		[Type createEnum: constr:(NSMutableString*)@"Z" params:[[NSMutableArray alloc] initWithObjects:, nil]];
	} pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"234",@"unit.TestReflect",@"testCreate",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
}
- (void) testCompare{
	
	MyClass *a = [[MyClass alloc] init:0];
	
	MyClass *b = [[MyClass alloc] init:1];
	[self t:[Reflect compareMethods:a add f2:a add] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"240",@"unit.TestReflect",@"testCompare",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self f:[Reflect compareMethods:a add f2:b add] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"241",@"unit.TestReflect",@"testCompare",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self f:[Reflect compareMethods:a add f2:a get] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"242",@"unit.TestReflect",@"testCompare",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self f:[Reflect compareMethods:a add f2:nil] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"243",@"unit.TestReflect",@"testCompare",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self f:[Reflect compareMethods:nil f2:a add] pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"244",@"unit.TestReflect",@"testCompare",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
}
- (void) testGetProp{
	
	ClassWithProp *c = [[ClassWithProp alloc] init];
	[self eq:[c get_x] v2:5 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"263",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:(id)( (c == nil) ? nil : [c __Field-TDynamic-]) v2:5 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"265",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[c set_x:0];
	if (c != nil) [c __SetField-TDynamic-];
	[self eq:[c get_x] v2:10 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"271",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:(id)( (c == nil) ? nil : [c __Field-TDynamic-]) v2:10 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"272",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	
	InterfWithProp *c1 = [[ClassWithProp alloc] init];
	[self eq:[c1 get_x] v2:5 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"275",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:(id)( (c1 == nil) ? nil : [c1 __Field-TDynamic-]) v2:5 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"277",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	if (c1 != nil) [c1 __SetField-TDynamic-];
	[self eq:[c1 get_x] v2:10 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"279",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:(id)( (c1 == nil) ? nil : [c1 __Field-TDynamic-]) v2:10 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"280",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	
	SubClassWithProp *c2 = [[SubClassWithProp alloc] init];
	[self eq:[c2 get_x] v2:6 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"283",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:(id)( (c2 == nil) ? nil : [c2 __Field-TDynamic-]) v2:6 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"284",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:c2 y v2:10 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"285",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:(id)( (c2 == nil) ? nil : [c2 __Field-TDynamic-]) v2:10 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"286",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	if (c2 != nil) [c2 __SetField-TDynamic-];
	if (c2 != nil) [c2 __SetField-TDynamic-];
	[self eq:[c2 get_x] v2:11 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"291",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:(id)( (c2 == nil) ? nil : [c2 __Field-TDynamic-]) v2:11 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"292",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:c2 y v2:20 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"293",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:(id)( (c2 == nil) ? nil : [c2 __Field-TDynamic-]) v2:20 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"294",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:ClassWithProp STAT_X v2:6 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"296",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:((id)($this:(snd ctx.path)) id o = ClassWithProp
	__r__ = ( (o == nil) ? nil : [o __Field-TDynamic-])
	return __r__{
		
		id* __r__}
	}(self)) v2:6 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"297",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	{
		id o = ClassWithProp;
		if (o != nil) [o __SetField-TDynamic-];
	}
	[self eq:ClassWithProp STAT_X v2:16 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"301",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
	[self eq:((id)($this:(snd ctx.path)) id o = ClassWithProp
	__r__2 = ( (o == nil) ? nil : [o __Field-TDynamic-])
	return __r__2{
		
		id* __r__2}
	}(self)) v2:16 pos:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:@"TestReflect.hx",@"302",@"unit.TestReflect",@"testGetProp",nil] forKeys:[NSArray arrayWithObjects:@"fileName",@"lineNumber",@"className",@"methodName",nil]]];
}
- (id) init{
	self = [super init];
	[super];
	return self;
}

@end
