//
//  List
//  Test
//
//  Source generated by Haxe Objective-C target
//

#import "List.h"

@implementation List

@synthesize h;
@synthesize q;
@synthesize length;
- (void) add:(id)item{
	
	NSMutableArray *x = [[NSMutableArray alloc] initWithObjects:item, nil];
	if (self.h == nil) self.h = x;
	else [self.q objectAtIndex:1] = x;
	self.q = x;
	self.length++;
}
- (void) push:(id)item{
	
	NSMutableArray *x = [[NSMutableArray alloc] initWithObjects:item, self.h, nil];
	self.h = x;
	if (self.q == nil) self.q = x;
	self.length++;
}
- (id) first{
	return ( (self.h == nil) ? nil : [self.h objectAtIndex:0]);
}
- (id) pop{
	if (self.h == nil) return nil;
	id x = [self.h objectAtIndex:0];
	self.h = [self.h objectAtIndex:1];
	if (self.h == nil) self.q = nil;
	self.length--;
	return x;
}
- (BOOL) isEmpty{
	return self.h == nil;
}
- (id) iterator{
	return (id)struct {
	h:self.h; hasNext:^- (id) {
		return self.h != nil;
	}; next:^- (id) {
		if (self.h == nil) return nil;
		id x = [self.h objectAtIndex:0];
		self.h = [self.h objectAtIndex:1];
		return x;
	}
	} structName;
}
- (id) init{
	self = [super init];
	self.length = 0;
	return self;
}

@end
