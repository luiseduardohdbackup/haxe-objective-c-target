package objc.ios.ui;


typedef NS_ENUM(NSInteger, UITabBarSystemItem) {
    UITabBarSystemItemMore,
    UITabBarSystemItemFavorites,
    UITabBarSystemItemFeatured,
    UITabBarSystemItemTopRated,
    UITabBarSystemItemRecents,
    UITabBarSystemItemContacts,
    UITabBarSystemItemHistory,
    UITabBarSystemItemBookmarks,
    UITabBarSystemItemSearch,
    UITabBarSystemItemDownloads,
    UITabBarSystemItemMostRecent,
    UITabBarSystemItemMostViewed,
};


extern class UITabBarItem extends UIBarItem {

/* Selected and unselected images are autogenerated from the image argument. For full control of
  the selected and unselected images, use -setFinishedSelectedImage:withFinishedUnselectedImage:.
 */
- (id)initWithTitle:(NSString *)title image:(UIImage *)image tag:(NSInteger)tag;
- (id)initWithTabBarSystemItem:(UITabBarSystemItem)systemItem tag:(NSInteger)tag;

public var  NSString *badgeValue;    // default is nil

/* UIKit will not provide any automatic treatment to finished images. You must provide finished selected
 and unselected images in matching pairs for good results. Note that these methods are not tagged
 UI_APPEARANCE_SELECTOR and do not participate in the UIAppearance Proxy API.
 */
	public function setFinishedSelectedImage:(UIImage *)selectedImage withFinishedUnselectedImage:(UIImage *)unselectedImage NS_AVAILABLE_IOS(5_0);
- (UIImage *)finishedSelectedImage NS_AVAILABLE_IOS(5_0);
- (UIImage *)finishedUnselectedImage NS_AVAILABLE_IOS(5_0);

/* To set item label text attributes use the appearance selectors available on the superclass, UIBarItem.

   Use the following to tweak the relative position of the label within the tab button (for handling visual centering corrections if needed because of custom text attributes)
 */
	public function setTitlePositionAdjustment:(UIOffset)adjustment NS_AVAILABLE_IOS(5_0) UI_APPEARANCE_SELECTOR; 
- (UIOffset)titlePositionAdjustment NS_AVAILABLE_IOS(5_0) UI_APPEARANCE_SELECTOR;

}
