//
//  Hash
//  Tests
//
//  Source generated by Haxe Objective-C target
//

#import "Hash.h"

@implementation NSMutableDictionary ( Hash )

- (void) set:(NSMutableString*)key value:(id)value{
	[self setObject:value :key];
}
- (id) get:(NSMutableString*)key{
	return [self objectForKey:key];
}
- (BOOL) exists:(NSMutableString*)key{
	return [self objectForKey:key] != nil;
}
- (BOOL) remove:(NSMutableString*)key{
	return [self removeObjectForKey:key];
}
- (id) keys{
	
	NSMutableArray *a = [self allKeys];
	return [a iterator];
}
- (id) iterator{
	
	NSMutableArray *a = [self allValues];
	
	NSMutableArray *it = [[NSMutableArray alloc] initWithObjects:[a iterator], nil]];
	
	NSMutableArray *me = [[NSMutableArray alloc] initWithObjects:self, nil]];
	return struct {
	hasNext:^(BOOL){
		return [[it objectAtIndex:0] GFA2 .hasNext];
	}; next:^(id){
		return [[me objectAtIndex:0] __Internal GFA2 .__Field:[[it objectAtIndex:0] GFA2 .next] :YES];
	}
	} structName;
}
- (NSMutableString*) toString{
	return [self description];
}
- (id) init{
	self = [super init];
	return self;
}

@end
