//
//  Hash
//  Tests
//
//  Source generated by Haxe Objective-C target
//

#import "Hash.h"

@implementation NSMutableDictionary ( Hash )

- (void) set:(NSMutableString*)key value:(id)value{
	[self setObject:value forKey:key];
}
- (id) get:(NSMutableString*)key{
	return [self FA_  objectForKey:key];
}
- (BOOL) exists:(NSMutableString*)key{
	return [self FA_  objectForKey:key] != nil;
}
- (BOOL) remove:(NSMutableString*)key{
	if ([self FA_  exists:key]) {
		[self FA_  removeObjectForKey:key];
		return YES;
	}
	return NO;
}
- (id_anon*) keys{
	
	NSMutableArray *a = [self FA_  allKeys];
	return [a FA_  iterator];
}
- (id_anon*) iterator{
	
	NSMutableArray *a = [self FA_  allValues];
	
	NSMutableArray *it = [[NSMutableArray alloc] initWithObjects:[a FA_  iterator], nil]];
	
	NSMutableArray *me = [[NSMutableArray alloc] initWithObjects:self, nil]];
	return struct {
	hasNext:^(BOOL){
		return [[it objectAtIndex:0]FA_TAnon_ -GFA2-hasNext];
	}; next:^(id){
		return [[me objectAtIndex:0] FA_  __InternalFA_TAnon_ -GFA2-__Field:[[it objectAtIndex:0]FA_TAnon_ -GFA2-next] :YES];
	}
	} structName;
}
- (NSMutableString*) toString{
	return [self FA_  description];
}
- (id) init{
	self = [super init];
	return self;
}

@end
