//
//  Timer
//  Tests
//
//  Source generated by Haxe Objective-C target
//

#import "Timer.h"

@implementation Timer

+ (Timer*) delay:(SEL*)f time_ms:(int)time_ms{
	
	NSMutableArray *f1 = [[NSMutableArray alloc] initWithObjects:f, nil]];
	
	NSMutableArray *t = [[NSMutableArray alloc] initWithObjects:[[Timer alloc] init:time_ms], nil]];
	[t objectAtIndex:0].FA_ .run = ^(void){
		[[t objectAtIndex:0] FA_  stop];
		[[f1 objectAtIndex:0]];
	}
	return [t objectAtIndex:0];
}
+ (id) measure:(SEL*)f pos:(id_anon*)pos{
	if (pos==nil) pos=nil;
	float t0 = [TimerFA_TAnon_ FA_  stamp];
	id r = [f];
	[LogFA_TAnon_ FA_  trace:[[TimerFA_TAnon_ FA_  stamp] - t0 stringByAppendingString:@"s"] infos:pos];
	return r;
}
+ (float) stamp{
	return [SysFA_TAnon_ FA_  time];
}
@synthesize nstimer;
@synthesize id;
- (void) stop{
	if (self.FA_ .id == nil) return;
	[self FA_  nstimer FA_  invalidate];
	self.FA_ .nstimer = nil;
	self.FA_ .id = nil;
}
- (void) run{
}
- (id) init:(int)time_ms{
	self = [super init];
	self.FA_ .nstimer = [NSTimerFA_TAnon_ FA_  timerWithTimeInterval:time_ms target:self selector:self FA_  run userInfo:nil repeats:YES];
	return self;
}

@end
