//
//  EReg
//  Tests
//
//  Source generated by Haxe Objective-C target
//

#import "EReg.h"

@implementation NSRegularExpression ( EReg )

static id r__;
- (id) r{
	return r__;
}
- (void) setR:(id)val{
	r__ = val;
}
static NSMutableString* last__;
- (NSMutableString*) last{
	return last__;
}
- (void) setLast:(NSMutableString*)val{
	last__ = val;
}
static BOOL global__;
- (BOOL) global{
	return global__;
}
- (void) setGlobal:(BOOL)val{
	global__ = val;
}
- (BOOL) match:(NSMutableString*)s{
	BOOL p = YES;
	if (p) self.FA_ .last = s
	else self.FA_ .last = nil;
	return p;
}
- (NSMutableString*) matched:(int)n{
	
	NSMutableString *m = nil;
	return m;
}
- (NSMutableString*) matchedLeft{
	
	id_anon *p = nil;
	return [self FA_  last  substringWithRange:0 len:pFA_TAnon_ -GFA2-pos];
}
- (NSMutableString*) matchedRight{
	
	id_anon *p = nil;
	int sz = pFA_TAnon_ -GFA2-pos + pFA_TAnon_ -GFA2-len;
	return [self FA_  last  substringWithRange:sz len:self FA_  last length - sz];
}
- (id_anon*) matchedPos{
	return nil;
}
- (NSMutableArray*) split:(NSMutableString*)s{
	int pos = 0;
	int len = s.length;
	
	NSMutableArray *a = [[NSMutableArray alloc] init];
	BOOL first = YES;
	do {
		
		id_anon *p = nil;
		if (pFA_TAnon_ -GFA2-len == 0 && !first) {
			if (pFA_TAnon_ -GFA2-pos == s.length) break;
			pFA_TAnon_ -GFA2-pos += 1;
		}
		[a FA_  push:[s  substringWithRange:pos len:pFA_TAnon_ -GFA2-pos - pos]];
		int tot = pFA_TAnon_ -GFA2-pos + pFA_TAnon_ -GFA2-len - pos;
		pos += tot;
		len -= tot;
		first = NO;
	}while (self.FA_ .global);
	[a FA_  push:[s  substringWithRange:pos len:len]];
	return a;
}
- (NSMutableString*) replace:(NSMutableString*)s by:(NSMutableString*)by{
	
	StringBuf *b = [[StringBuf alloc] init];
	int pos = 0;
	int len = s.length;
	
	NSMutableArray *a = [by  componentsSeparatedByString:@"$"];
	BOOL first = YES;
	do {
		
		id_anon *p = nil;
		if (pFA_TAnon_ -GFA2-len == 0 && !first) {
			if (pFA_TAnon_ -GFA2-pos == s.length) break;
			pFA_TAnon_ -GFA2-pos += 1;
		}
		b.FA_ .b += [s  substringWithRange:pos len:pFA_TAnon_ -GFA2-pos - pos];
		if (a.FA_ .length > 0) b.FA_ .b += [StdFA_TAnon_ FA_  string:[a objectAtIndex:0]];
		int i = 1;
		while (i < a.FA_ .length) {
			
			NSMutableString *k = [a objectAtIndex:i];
			int c = [k  characterAtIndex:0];
			if (c >= 49 && c <= 57) {
				
				id_anon *p1 = nil;
				if (p1 == nil) {
					[b.FA_ .b appendString:@"$"];
					b.FA_ .b += [StdFA_TAnon_ FA_  string:k];
				}
				else {
					b.FA_ .b += [s  substringWithRange:p1FA_TAnon_ -GFA2-pos len:p1FA_TAnon_ -GFA2-len];
					b.FA_ .b += [k  substringWithRange:1 len:k length - 1];
				}
			}
			else if (c == nil) {
				[b.FA_ .b appendString:@"$"];
				i++;
				
				NSMutableString *k2 = [a objectAtIndex:i];
				if (k2 != nil && k2.length > 0) b.FA_ .b += [StdFA_TAnon_ FA_  string:k2];
			}
			else b.FA_ .b += [StdFA_TAnon_ FA_  string:[@"$" stringByAppendingString:k]];
			i++;
		}
		int tot = pFA_TAnon_ -GFA2-pos + pFA_TAnon_ -GFA2-len - pos;
		pos += tot;
		len -= tot;
		first = NO;
	}while (self.FA_ .global);
	b.FA_ .b += [s  substringWithRange:pos len:len];
	return b.FA_ .b;
}
- (NSMutableString*) customReplace:(NSMutableString*)s f:(SEL*)f{
	
	StringBuf *buf = [[StringBuf alloc] init];
	while (YES) {
		if (![self FA_  match:s]) break;
		buf.FA_ .b += [StdFA_TAnon_ FA_  string:[self FA_  matchedLeft]];
		buf.FA_ .b += [StdFA_TAnon_ FA_  string:[f:self]];
		s = [self FA_  matchedRight];
	}
	buf.FA_ .b += [StdFA_TAnon_ FA_  string:s];
	return buf.FA_ .b;
}
- (id) init:(NSMutableString*)r opt:(NSMutableString*)opt{
	self = [super init];
	
	NSMutableArray *a = [opt  componentsSeparatedByString:@"g"];
	self.FA_ .global = a.FA_ .length > 1;
	if (self.FA_ .global) opt = [a FA_  join:@""];
	self.FA_ .r = nil;
	return self;
}

@end
