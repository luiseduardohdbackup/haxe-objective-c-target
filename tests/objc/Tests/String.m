//
//  String
//  Tests
//
//  Source generated by Haxe Objective-C target
//

#import "String.h"

@implementation NSMutableString ( String )

+ (NSMutableString*) fromCharCode:(int)code{
	return [NSString stringWithFormat: @"%C", code];
}
// Getters/setters for property length
static int length__;
- (int) length { return length__; }
- (void) setLength:(int)val { length__ = val; }

- (NSMutableString*) toUpperCase{
	return nil;
}
- (NSMutableString*) toLowerCase{
	return nil;
}
- (NSMutableString*) charAt:(int)index{
	return nil;
}
- (int) charCodeAt:(int)index{
	return nil;
}
- (int) indexOf:(NSMutableString*)str startIndex:(int)startIndex{
	// Simulated optional arguments
	if (startIndex == nil) startIndex = nil;
	
	NSRange range = [self rangeOfString:str];
	if ( range.location != NSNotFound ) {
		return range.location;
	};
	return -1;
}
- (int) lastIndexOf:(NSMutableString*)str startIndex:(int)startIndex{
	// Simulated optional arguments
	if (startIndex == nil) startIndex = nil;
	
	NSRange range = [self rangeOfString:str options:NSBackwardsSearch];
	if ( range.location != NSNotFound ) {
		return range.location;
	};
	return -1;
}
- (NSMutableArray*) split:(NSMutableString*)delimiter{
	return nil;
}
- (NSMutableString*) substr:(int)pos len:(int)len{
	// Simulated optional arguments
	if (len == nil) len = nil;
	
	return [self substringWithRange:NSMakeRange(pos,len)];
}
- (NSMutableString*) substring:(int)startIndex endIndex:(int)endIndex{
	// Simulated optional arguments
	if (endIndex == nil) endIndex = nil;
	
	return [self substringWithRange:NSMakeRange(startIndex,endIndex-startIndex)];
}
- (NSMutableString*) toString{
	return nil;
}
- (id) init:(NSMutableString*)string{
	self = [super init];
	return self;
}

@end
